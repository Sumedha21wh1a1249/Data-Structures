#include<stdio.h>
#include<stdlib.h>
#define max 4 
int q[max];
int front,rear;
int isempty();
int isfull();
void enqueue(int);
int dequeue();
void length();
void display();

int isfull()
{
    if(front == (rear+ 1)%max )
    return 1;
    else
    return 0;
}

int isempty()
{
    if (front == -1)
    return 1;
    else
    return 0;
}

void enqueue(int n)
{
    if(isfull())
    printf("Queue overflow.\n");
    else if (isempty())
    {
        front=rear=0;
        q[front]=n;
    }
    else
    {
        rear = (rear + 1)% max;
        q[rear]=n;
    }
}
int dequeue()
{
    int x;
    if(isempty())
    printf("Queue underflow.\n");
    else if(rear == front)
    {
        x = q[front];
        rear=front=-1;
    }
    else
    {
    x = q[front];
    front = (front + 1)%max;
    }
    return x;
    
}

void display()
{
    int i=front;
    if(front == -1)
    printf("Queue is empty!\n");
    else if(front==rear)
    {
        printf("%d ",q[front]);
    }
    else if (front < rear)
    {
    for(i=front;i<=rear;i++)
    printf("%d ",q[i]);
    }
    else
    {
        for(i=front; i <= max-1; i++)
        printf("%d ",q[i]);
        for(i=0; i <= rear ;i++)
        printf("%d ",q[i]);
    }
}

void length()
{
    int i=front, count=0;
    if(front == -1)
    printf("Queue is empty!\n");
    else if(front==rear)
    {
        count=1;
    }
    else if (front < rear)
    {
    for(i=front;i<=rear;i++)
    count++;
    }
    else
    {
        for(i=front; i <= max-1; i++)
        count++;
        for(i=0; i <= rear ;i++)
        count++;
    }
    printf("The length of the queue is : %d ",count);
}

void main()
{
	front=-1;
	rear=-1;
	int ch,p;
	printf("Options\n1.Enqueue\n2.Dequeue\n3.Length\n4.Display\n5.Exit\n");
	while(1)
	{
		
		printf("\nEnter an option : ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
			    printf("Enter data : ");
			    scanf("%d",&p);
				enqueue(p);
				break;
			case 2:
				dequeue();
				break;
			case 3:
				length();
				break;
			case 4:
				printf("The Queue is : ");
				display();
				break;
			case 5:
				exit(-1);
			default:
				printf("Invalid option.\n");


		}

	}

}

